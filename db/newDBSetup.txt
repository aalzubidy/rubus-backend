-- Database: rubus

-- DROP DATABASE rubus;

CREATE DATABASE rubus
    WITH 
    OWNER = postgres
    ENCODING = 'SQL_ASCII'
    LC_COLLATE = 'C'
    LC_CTYPE = 'C'
    TABLESPACE = pg_default
    CONNECTION LIMIT = -1;

ALTER DATABASE rubus
    SET search_path TO public;
ALTER ROLE postgres IN DATABASE rubus
    SET search_path TO public, "$user", public;

GRANT ALL ON DATABASE rubus TO postgres;

GRANT TEMPORARY, CONNECT ON DATABASE rubus TO PUBLIC;

-------------------------------------------------------------------------------------------------

-- Table: public.convertqueries

-- DROP TABLE public.convertqueries;

CREATE TABLE public.convertqueries
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    input_query text COLLATE pg_catalog."default" NOT NULL,
    output_query text COLLATE pg_catalog."default" NOT NULL,
    create_date date NOT NULL,
    user_id integer NOT NULL,
    CONSTRAINT "convertQueries_id_pk" PRIMARY KEY (id),
    CONSTRAINT "convertQueries_userId_users_id_fk" FOREIGN KEY (user_id)
        REFERENCES public.users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE public.convertqueries
    OWNER to postgres;

-------------------------------------------------------------------------------------------------

-- Table: public.convertqueries

-- DROP TABLE public.convertqueries;

CREATE TABLE public.convertqueries
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    input_query text COLLATE pg_catalog."default" NOT NULL,
    output_query text COLLATE pg_catalog."default" NOT NULL,
    create_date date NOT NULL,
    user_id integer NOT NULL,
    CONSTRAINT "convertQueries_id_pk" PRIMARY KEY (id),
    CONSTRAINT "convertQueries_userId_users_id_fk" FOREIGN KEY (user_id)
        REFERENCES public.users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE public.convertqueries
    OWNER to postgres;

-------------------------------------------------------------------------------------------------

-- Table: public.projects

-- DROP TABLE public.projects;

CREATE TABLE public.projects
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    title character varying(300) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    create_date date NOT NULL,
    user_id integer NOT NULL,
    CONSTRAINT projects_id_pk PRIMARY KEY (id),
    CONSTRAINT "projects_userId_users_id_fk" FOREIGN KEY (user_id)
        REFERENCES public.users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE public.projects
    OWNER to postgres;

-------------------------------------------------------------------------------------------------

-- Table: public.projects_users

-- DROP TABLE public.projects_users;

CREATE TABLE public.projects_users
(
    user_id integer NOT NULL,
    project_id integer NOT NULL,
    added_by integer NOT NULL,
    create_date date NOT NULL,
    CONSTRAINT "projects_users_userId_projectId_pk" PRIMARY KEY (user_id, project_id),
    CONSTRAINT "projects_users_projectId_projects_id_fk" FOREIGN KEY (project_id)
        REFERENCES public.projects (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "projects_users_userId_users_id_fk" FOREIGN KEY (user_id)
        REFERENCES public.users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE public.projects_users
    OWNER to postgres;

-------------------------------------------------------------------------------------------------

-- Table: public.searchqueries

-- DROP TABLE public.searchqueries;

CREATE TABLE public.searchqueries
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    input_query text COLLATE pg_catalog."default" NOT NULL,
    db character varying(100) COLLATE pg_catalog."default" NOT NULL,
    total_results bigint NOT NULL,
    create_date date NOT NULL,
    user_id integer NOT NULL,
    project_id integer NOT NULL,
    CONSTRAINT "searchQueries_id_pk" PRIMARY KEY (id),
    CONSTRAINT "searchQueries_projectId_projectss_id_fk" FOREIGN KEY (project_id)
        REFERENCES public.projects (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "searchQueries_userId_users_id_fk" FOREIGN KEY (user_id)
        REFERENCES public.users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE public.searchqueries
    OWNER to postgres;

-------------------------------------------------------------------------------------------------

-- Table: public.publications

-- DROP TABLE public.publications;

CREATE TABLE public.publications
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    type character varying(300) COLLATE pg_catalog."default",
    author text COLLATE pg_catalog."default",
    editor text COLLATE pg_catalog."default",
    title text COLLATE pg_catalog."default",
    book_title text COLLATE pg_catalog."default",
    year character varying(50) COLLATE pg_catalog."default",
    publisher text COLLATE pg_catalog."default",
    address text COLLATE pg_catalog."default",
    pages character varying(50) COLLATE pg_catalog."default",
    isbn text COLLATE pg_catalog."default",
    doi text COLLATE pg_catalog."default",
    url text COLLATE pg_catalog."default",
    journal text COLLATE pg_catalog."default",
    volume text COLLATE pg_catalog."default",
    abstract text COLLATE pg_catalog."default",
    issn text COLLATE pg_catalog."default",
    location text COLLATE pg_catalog."default",
    keywords text COLLATE pg_catalog."default",
    month character varying(50) COLLATE pg_catalog."default",
    obtained_bibtex text COLLATE pg_catalog."default",
    generated_bibtex text COLLATE pg_catalog."default",
    create_date date NOT NULL,
    CONSTRAINT publications_id_pk PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE public.publications
    OWNER to postgres;

-------------------------------------------------------------------------------------------------

-- Table: public.publications_users

-- DROP TABLE public.publications_users;

CREATE TABLE public.publications_users
(
    user_id integer NOT NULL,
    publication_id integer NOT NULL,
    projects text[] COLLATE pg_catalog."default",
    CONSTRAINT "publications_users_userId_publicationId_pk" PRIMARY KEY (user_id),
    CONSTRAINT "users_publications_publicationId_publications_id_fk" FOREIGN KEY (publication_id)
        REFERENCES public.publications (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "users_publications_userId_users_id_fk" FOREIGN KEY (user_id)
        REFERENCES public.users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE public.publications_users
    OWNER to postgres;

-------------------------------------------------------------------------------------------------

-- Table: public.testtable

-- DROP TABLE public.testtable;

CREATE TABLE public.testtable
(
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    email text[] COLLATE pg_catalog."default",
    CONSTRAINT "testTable_pkey" PRIMARY KEY (name)
)

TABLESPACE pg_default;

ALTER TABLE public.testtable
    OWNER to postgres;

-------------------------------------------------------------------------------------------------
